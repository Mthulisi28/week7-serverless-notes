{
  "C:\\Users\\green\\week6-live\\authorizer\\serverless.yml": {
    "versionFramework": "4.22.0",
    "servicePath": "C:\\Users\\green\\week6-live\\authorizer\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "week7-authorizer",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "us-east-2",
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "AuthorizerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/week7-authorizer-dev-authorizer"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "week7-authorizer",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/week7-authorizer-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/week7-authorizer-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "week7-authorizer",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "AuthorizerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-2-1697ea63-8dba",
                  "S3Key": "serverless/week7-authorizer/dev/1761485518798-2025-10-26T13:31:58.798Z/week7-authorizer.zip"
                },
                "Handler": "handler.handler",
                "Runtime": "nodejs18.x",
                "FunctionName": "week7-authorizer-dev-authorizer",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "AuthorizerLogGroup"
              ]
            },
            "AuthorizerLambdaVersionsynMi9Qo7AxJQ8I65VVpGJg3HnXRpVF5U33MzW1nM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "AuthorizerLambdaFunction"
                },
                "CodeSha256": "05IDQst72W41KBe9r4t3HE9WCJg4fGsRsvNA0yaqjsE="
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-2-1697ea63-8dba",
              "Export": {
                "Name": "sls-week7-authorizer-dev-ServerlessDeploymentBucketName"
              }
            },
            "AuthorizerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "AuthorizerLambdaVersionsynMi9Qo7AxJQ8I65VVpGJg3HnXRpVF5U33MzW1nM"
              },
              "Export": {
                "Name": "sls-week7-authorizer-dev-AuthorizerLambdaFunctionQualifiedArn"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "authorizer": {
          "handler": "handler.handler",
          "events": [],
          "name": "week7-authorizer-dev-authorizer",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "AuthorizerLambdaVersionsynMi9Qo7AxJQ8I65VVpGJg3HnXRpVF5U33MzW1nM"
        }
      },
      "plugins": [
        "serverless-offline"
      ]
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-2",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "AuthorizerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/week7-authorizer-dev-authorizer"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "week7-authorizer",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/week7-authorizer-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/week7-authorizer-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "week7-authorizer",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AuthorizerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-2-1697ea63-8dba",
                "S3Key": "serverless/week7-authorizer/dev/1761485518798-2025-10-26T13:31:58.798Z/week7-authorizer.zip"
              },
              "Handler": "handler.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "week7-authorizer-dev-authorizer",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AuthorizerLogGroup"
            ]
          },
          "AuthorizerLambdaVersionsynMi9Qo7AxJQ8I65VVpGJg3HnXRpVF5U33MzW1nM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthorizerLambdaFunction"
              },
              "CodeSha256": "05IDQst72W41KBe9r4t3HE9WCJg4fGsRsvNA0yaqjsE="
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-2-1697ea63-8dba",
            "Export": {
              "Name": "sls-week7-authorizer-dev-ServerlessDeploymentBucketName"
            }
          },
          "AuthorizerLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthorizerLambdaVersionsynMi9Qo7AxJQ8I65VVpGJg3HnXRpVF5U33MzW1nM"
            },
            "Export": {
              "Name": "sls-week7-authorizer-dev-AuthorizerLambdaFunctionQualifiedArn"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: week7-authorizer\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  region: us-east-2\nfunctions:\n  authorizer:\n    handler: handler.handler\nplugins:\n  - serverless-offline\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "b6816b44-a4c8-43a9-b969-6ae0c84ad92e",
    "orgName": "mthulisi28",
    "userId": null,
    "serviceProviderAwsAccountId": "744872514312",
    "serviceProviderAwsCfStackName": "week7-authorizer-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-2:744872514312:stack/week7-authorizer-dev/3609f970-b270-11f0-856a-026e92907d2f",
    "serviceProviderAwsCfStackCreated": "2025-10-26T13:32:26.295Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "AuthorizerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-2:744872514312:function:week7-authorizer-dev-authorizer:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-week7-authorizer-dev-AuthorizerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-2-1697ea63-8dba",
        "ExportName": "sls-week7-authorizer-dev-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "AuthorizerLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/week7-authorizer-dev-authorizer"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "week7-authorizer",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/week7-authorizer-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/week7-authorizer-dev*:*:*"
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "week7-authorizer",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "AuthorizerLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-2-1697ea63-8dba",
              "S3Key": "serverless/week7-authorizer/dev/1761485518798-2025-10-26T13:31:58.798Z/week7-authorizer.zip"
            },
            "Handler": "handler.handler",
            "Runtime": "nodejs18.x",
            "FunctionName": "week7-authorizer-dev-authorizer",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "AuthorizerLogGroup"
          ]
        },
        "AuthorizerLambdaVersionsynMi9Qo7AxJQ8I65VVpGJg3HnXRpVF5U33MzW1nM": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "AuthorizerLambdaFunction"
            },
            "CodeSha256": "05IDQst72W41KBe9r4t3HE9WCJg4fGsRsvNA0yaqjsE="
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-east-2-1697ea63-8dba",
          "Export": {
            "Name": "sls-week7-authorizer-dev-ServerlessDeploymentBucketName"
          }
        },
        "AuthorizerLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "AuthorizerLambdaVersionsynMi9Qo7AxJQ8I65VVpGJg3HnXRpVF5U33MzW1nM"
          },
          "Export": {
            "Name": "sls-week7-authorizer-dev-AuthorizerLambdaFunctionQualifiedArn"
          }
        }
      }
    }
  }
}